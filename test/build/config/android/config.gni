
if (is_android) {
  declare_args() {
    android_sdk_root = "//third_party/android_tools/sdk"
    android_sdk_version = "23"

    # Set to true to run findbugs on JAR targets.
    run_findbugs = false

    # Set to true to enable verbose findbugs logging. This does nothing if
    # run_findbugs is false.
    findbugs_verbose = false

    # Enables verbose proguard output (summaries and unfiltered output).
    proguard_verbose = false

    # Java debug on Android. Having this on enables multidexing, and turning it
    # off will enable proguard.
    is_java_debug = is_debug

    # Set to true to enable the Errorprone compiler
    use_errorprone_java_compiler = false

    # Enables EMMA Java code coverage. Instruments classes during build to
    # produce .ec files during runtime
    emma_coverage = false

    # EMMA filter string consisting of a list of inclusion/exclusion patterns
    # separated with whitespace and/or comma. Only has effect if
    # emma_coverage==true
    emma_filter = ""

    # Disables process isolation when building _incremental targets.
    # Required for Android M+ due to SELinux policies (stronger sandboxing).
    disable_incremental_isolated_processes = false

    # Speed up incremental compiles by compiling only changed files.
    enable_incremental_javac = false

    # Adds intrumentation to each function. Writes a file with the order that
    # functions are called at startup.
    use_order_profiling = false
    android_sdk_build_tools_version = "23.0.1"
  }

  android_sdk = "${android_sdk_root}/platforms/android-${android_sdk_version}"
  android_sdk_tools = "${android_sdk_root}/tools"
  android_sdk_build_tools = "${android_sdk_root}/build-tools/${android_sdk_build_tools_version}"

  android_sdk_jar = "${android_sdk}/android.jar"
  zipalign_path = "${android_sdk_build_tools}/zipalign"
}

declare_args() {
  enable_resource_whitelist_generation = is_android
}
